{"ast":null,"code":"var _jsxFileName = \"/Users/dyland/Desktop/Sem7/CS222/frontend/src/components/StockPredictionChart.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { supabase } from '../utils/supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nexport default function StockPredictionChart() {\n  _s();\n  var _predictionData$;\n  const [predictionData, setPredictionData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchPredictions = async () => {\n      try {\n        const {\n          data,\n          error: supabaseError\n        } = await supabase.from('stock_predictions').select('*').order('date', {\n          ascending: true\n        });\n        if (supabaseError) throw supabaseError;\n        setPredictionData(data || []);\n      } catch (err) {\n        setError(err instanceof Error ? err.message : 'Failed to fetch data');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPredictions();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center items-center h-64\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-indigo-500\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-red-500 text-center p-4 bg-red-50 rounded-lg\",\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      month: '2-digit',\n      day: '2-digit',\n      year: '2-digit'\n    }).replace(/\\//g, '-');\n  };\n  const chartData = {\n    labels: predictionData.map(d => formatDate(d.date)),\n    datasets: [{\n      label: 'Actual Price',\n      data: predictionData.map(d => d.actual_price),\n      borderColor: '#6366f1',\n      // Modern indigo\n      backgroundColor: 'rgba(99, 102, 241, 0.05)',\n      borderWidth: 2,\n      tension: 0.3,\n      fill: true,\n      pointRadius: 0,\n      // Hide points for cleaner look\n      pointHoverRadius: 4 // Show points on hover\n    }, {\n      label: 'Predicted Price',\n      data: predictionData.map(d => d.predicted_price),\n      borderColor: '#f43f5e',\n      // Modern rose\n      backgroundColor: 'rgba(244, 63, 94, 0.05)',\n      borderWidth: 2,\n      tension: 0.3,\n      fill: true,\n      pointRadius: 0,\n      pointHoverRadius: 4\n    }]\n  };\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n        labels: {\n          padding: 20,\n          usePointStyle: true,\n          // Use circular legend markers\n          pointStyle: 'circle',\n          font: {\n            size: 13,\n            family: \"'Inter', sans-serif\",\n            weight: '500'\n          }\n        }\n      },\n      title: {\n        display: true,\n        text: `${((_predictionData$ = predictionData[0]) === null || _predictionData$ === void 0 ? void 0 : _predictionData$.ticker) || 'Stock'} Price Predictions`,\n        font: {\n          size: 18,\n          family: \"'Inter', sans-serif\",\n          weight: 'bold'\n        },\n        padding: {\n          top: 20,\n          bottom: 24\n        }\n      },\n      tooltip: {\n        backgroundColor: 'rgba(255, 255, 255, 0.95)',\n        titleColor: '#1F2937',\n        bodyColor: '#1F2937',\n        borderColor: '#E5E7EB',\n        borderWidth: 1,\n        padding: 12,\n        displayColors: true,\n        usePointStyle: true,\n        callbacks: {\n          label: function (context) {\n            return `${context.dataset.label}: $${context.parsed.y.toFixed(2)}`;\n          }\n        },\n        bodyFont: {\n          size: 13,\n          family: \"'Inter', sans-serif\"\n        },\n        titleFont: {\n          size: 13,\n          family: \"'Inter', sans-serif\",\n          weight: '600'\n        }\n      },\n      interaction: {\n        intersect: false,\n        mode: 'index' // Add 'as const' to specify literal type\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: false,\n        grid: {\n          color: 'rgba(156, 163, 175, 0.1)'\n        },\n        ticks: {\n          callback: function (tickValue, index, ticks) {\n            // Need to handle both number and string cases\n            const value = typeof tickValue === 'number' ? tickValue : parseFloat(tickValue);\n            return `$${value.toFixed(2)}`;\n          },\n          font: {\n            family: \"'Inter', sans-serif\"\n          }\n        }\n      },\n      x: {\n        grid: {\n          display: false\n        },\n        ticks: {\n          font: {\n            family: \"'Inter', sans-serif\"\n          }\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full max-w-4xl mx-auto p-6 bg-white rounded-xl shadow-sm\",\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: options,\n      className: \"p-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n}\n_s(StockPredictionChart, \"CcNzVFfcw81pCfObogymxF1z/KU=\");\n_c = StockPredictionChart;\nvar _c;\n$RefreshReg$(_c, \"StockPredictionChart\");","map":{"version":3,"names":["useEffect","useState","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","supabase","jsxDEV","_jsxDEV","register","StockPredictionChart","_s","_predictionData$","predictionData","setPredictionData","loading","setLoading","error","setError","fetchPredictions","data","supabaseError","from","select","order","ascending","err","Error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","formatDate","dateString","Date","toLocaleDateString","month","day","year","replace","chartData","labels","map","d","date","datasets","label","actual_price","borderColor","backgroundColor","borderWidth","tension","fill","pointRadius","pointHoverRadius","predicted_price","options","responsive","plugins","legend","position","padding","usePointStyle","pointStyle","font","size","family","weight","title","display","text","ticker","top","bottom","tooltip","titleColor","bodyColor","displayColors","callbacks","context","dataset","parsed","y","toFixed","bodyFont","titleFont","interaction","intersect","mode","scales","beginAtZero","grid","color","ticks","callback","tickValue","index","value","parseFloat","x","_c","$RefreshReg$"],"sources":["/Users/dyland/Desktop/Sem7/CS222/frontend/src/components/StockPredictionChart.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n} from 'chart.js';\nimport { supabase } from '../utils/supabaseClient';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\ninterface PredictionData {\n  date: string;\n  actual_price: number;\n  predicted_price: number;\n  ticker: string;\n}\n\nexport default function StockPredictionChart() {\n  const [predictionData, setPredictionData] = useState<PredictionData[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchPredictions = async () => {\n      try {\n        const { data, error: supabaseError } = await supabase\n          .from('stock_predictions')\n          .select('*')\n          .order('date', { ascending: true });\n\n        if (supabaseError) throw supabaseError;\n        setPredictionData(data || []);\n      } catch (err) {\n        setError(err instanceof Error ? err.message : 'Failed to fetch data');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchPredictions();\n  }, []);\n\n  if (loading) return (\n    <div className=\"flex justify-center items-center h-64\">\n      <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-indigo-500\"></div>\n    </div>\n  );\n  \n  if (error) return (\n    <div className=\"text-red-500 text-center p-4 bg-red-50 rounded-lg\">\n      Error: {error}\n    </div>\n  );\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      month: '2-digit',\n      day: '2-digit',\n      year: '2-digit'\n    }).replace(/\\//g, '-');\n  };\n\n  const chartData = {\n    labels: predictionData.map(d => formatDate(d.date)),\n    datasets: [\n      {\n        label: 'Actual Price',\n        data: predictionData.map(d => d.actual_price),\n        borderColor: '#6366f1', // Modern indigo\n        backgroundColor: 'rgba(99, 102, 241, 0.05)',\n        borderWidth: 2,\n        tension: 0.3,\n        fill: true,\n        pointRadius: 0, // Hide points for cleaner look\n        pointHoverRadius: 4, // Show points on hover\n      },\n      {\n        label: 'Predicted Price',\n        data: predictionData.map(d => d.predicted_price),\n        borderColor: '#f43f5e', // Modern rose\n        backgroundColor: 'rgba(244, 63, 94, 0.05)',\n        borderWidth: 2,\n        tension: 0.3,\n        fill: true,\n        pointRadius: 0,\n        pointHoverRadius: 4,\n      }\n    ]\n  };\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top' as const,\n        labels: {\n          padding: 20,\n          usePointStyle: true, // Use circular legend markers\n          pointStyle: 'circle',\n          font: {\n            size: 13,\n            family: \"'Inter', sans-serif\",\n            weight: '500'\n          }\n        }\n      },\n      title: {\n        display: true,\n        text: `${predictionData[0]?.ticker || 'Stock'} Price Predictions`,\n        font: {\n          size: 18,\n          family: \"'Inter', sans-serif\",\n          weight: 'bold' as const\n        },\n        padding: { top: 20, bottom: 24 }\n      },\n      tooltip: {\n        backgroundColor: 'rgba(255, 255, 255, 0.95)',\n        titleColor: '#1F2937',\n        bodyColor: '#1F2937',\n        borderColor: '#E5E7EB',\n        borderWidth: 1,\n        padding: 12,\n        displayColors: true,\n        usePointStyle: true,\n        callbacks: {\n          label: function(context: any) {\n            return `${context.dataset.label}: $${context.parsed.y.toFixed(2)}`;\n          }\n        },\n        bodyFont: {\n          size: 13,\n          family: \"'Inter', sans-serif\"\n        },\n        titleFont: {\n          size: 13,\n          family: \"'Inter', sans-serif\",\n          weight: '600'\n        }\n      },\n      interaction: {\n        intersect: false,\n        mode: 'index' as const  // Add 'as const' to specify literal type\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: false,\n        grid: {\n          color: 'rgba(156, 163, 175, 0.1)'\n        },\n        ticks: {\n            callback: function(tickValue: number | string, index: number, ticks: any) {\n              // Need to handle both number and string cases\n              const value = typeof tickValue === 'number' ? tickValue : parseFloat(tickValue);\n              return `$${value.toFixed(2)}`;\n            },\n            font: {\n              family: \"'Inter', sans-serif\"\n            }\n          }\n      },\n      x: {\n        grid: {\n          display: false\n        },\n        ticks: {\n          font: {\n            family: \"'Inter', sans-serif\"\n          }\n        }\n      }\n    }\n  };\n\n\n  return (\n    <div className=\"w-full max-w-4xl mx-auto p-6 bg-white rounded-xl shadow-sm\">\n      <Line data={chartData} options={options} className=\"p-4\" />\n    </div>\n  );\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AACjB,SAASC,QAAQ,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnDV,OAAO,CAACW,QAAQ,CACdV,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MACF,CAAC;AASD,eAAe,SAASK,oBAAoBA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,gBAAA;EAC7C,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGnB,QAAQ,CAAmB,EAAE,CAAC;EAC1E,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACsB,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,QAAQ,CAAgB,IAAI,CAAC;EAEvDD,SAAS,CAAC,MAAM;IACd,MAAMyB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAM;UAAEC,IAAI;UAAEH,KAAK,EAAEI;QAAc,CAAC,GAAG,MAAMf,QAAQ,CAClDgB,IAAI,CAAC,mBAAmB,CAAC,CACzBC,MAAM,CAAC,GAAG,CAAC,CACXC,KAAK,CAAC,MAAM,EAAE;UAAEC,SAAS,EAAE;QAAK,CAAC,CAAC;QAErC,IAAIJ,aAAa,EAAE,MAAMA,aAAa;QACtCP,iBAAiB,CAACM,IAAI,IAAI,EAAE,CAAC;MAC/B,CAAC,CAAC,OAAOM,GAAG,EAAE;QACZR,QAAQ,CAACQ,GAAG,YAAYC,KAAK,GAAGD,GAAG,CAACE,OAAO,GAAG,sBAAsB,CAAC;MACvE,CAAC,SAAS;QACRZ,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIJ,OAAO,EAAE,oBACXP,OAAA;IAAKqB,SAAS,EAAC,uCAAuC;IAAAC,QAAA,eACpDtB,OAAA;MAAKqB,SAAS,EAAC;IAA6E;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChG,CAAC;EAGR,IAAIjB,KAAK,EAAE,oBACTT,OAAA;IAAKqB,SAAS,EAAC,mDAAmD;IAAAC,QAAA,GAAC,SAC1D,EAACb,KAAK;EAAA;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;EAGR,MAAMC,UAAU,GAAIC,UAAkB,IAAK;IACzC,OAAO,IAAIC,IAAI,CAACD,UAAU,CAAC,CAACE,kBAAkB,CAAC,OAAO,EAAE;MACtDC,KAAK,EAAE,SAAS;MAChBC,GAAG,EAAE,SAAS;MACdC,IAAI,EAAE;IACR,CAAC,CAAC,CAACC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;EACxB,CAAC;EAED,MAAMC,SAAS,GAAG;IAChBC,MAAM,EAAE/B,cAAc,CAACgC,GAAG,CAACC,CAAC,IAAIX,UAAU,CAACW,CAAC,CAACC,IAAI,CAAC,CAAC;IACnDC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,cAAc;MACrB7B,IAAI,EAAEP,cAAc,CAACgC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACI,YAAY,CAAC;MAC7CC,WAAW,EAAE,SAAS;MAAE;MACxBC,eAAe,EAAE,0BAA0B;MAC3CC,WAAW,EAAE,CAAC;MACdC,OAAO,EAAE,GAAG;MACZC,IAAI,EAAE,IAAI;MACVC,WAAW,EAAE,CAAC;MAAE;MAChBC,gBAAgB,EAAE,CAAC,CAAE;IACvB,CAAC,EACD;MACER,KAAK,EAAE,iBAAiB;MACxB7B,IAAI,EAAEP,cAAc,CAACgC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACY,eAAe,CAAC;MAChDP,WAAW,EAAE,SAAS;MAAE;MACxBC,eAAe,EAAE,yBAAyB;MAC1CC,WAAW,EAAE,CAAC;MACdC,OAAO,EAAE,GAAG;MACZC,IAAI,EAAE,IAAI;MACVC,WAAW,EAAE,CAAC;MACdC,gBAAgB,EAAE;IACpB,CAAC;EAEL,CAAC;EAED,MAAME,OAAO,GAAG;IACdC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,QAAQ,EAAE,KAAc;QACxBnB,MAAM,EAAE;UACNoB,OAAO,EAAE,EAAE;UACXC,aAAa,EAAE,IAAI;UAAE;UACrBC,UAAU,EAAE,QAAQ;UACpBC,IAAI,EAAE;YACJC,IAAI,EAAE,EAAE;YACRC,MAAM,EAAE,qBAAqB;YAC7BC,MAAM,EAAE;UACV;QACF;MACF,CAAC;MACDC,KAAK,EAAE;QACLC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAE,GAAG,EAAA7D,gBAAA,GAAAC,cAAc,CAAC,CAAC,CAAC,cAAAD,gBAAA,uBAAjBA,gBAAA,CAAmB8D,MAAM,KAAI,OAAO,oBAAoB;QACjEP,IAAI,EAAE;UACJC,IAAI,EAAE,EAAE;UACRC,MAAM,EAAE,qBAAqB;UAC7BC,MAAM,EAAE;QACV,CAAC;QACDN,OAAO,EAAE;UAAEW,GAAG,EAAE,EAAE;UAAEC,MAAM,EAAE;QAAG;MACjC,CAAC;MACDC,OAAO,EAAE;QACPzB,eAAe,EAAE,2BAA2B;QAC5C0B,UAAU,EAAE,SAAS;QACrBC,SAAS,EAAE,SAAS;QACpB5B,WAAW,EAAE,SAAS;QACtBE,WAAW,EAAE,CAAC;QACdW,OAAO,EAAE,EAAE;QACXgB,aAAa,EAAE,IAAI;QACnBf,aAAa,EAAE,IAAI;QACnBgB,SAAS,EAAE;UACThC,KAAK,EAAE,SAAAA,CAASiC,OAAY,EAAE;YAC5B,OAAO,GAAGA,OAAO,CAACC,OAAO,CAAClC,KAAK,MAAMiC,OAAO,CAACE,MAAM,CAACC,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,EAAE;UACpE;QACF,CAAC;QACDC,QAAQ,EAAE;UACRnB,IAAI,EAAE,EAAE;UACRC,MAAM,EAAE;QACV,CAAC;QACDmB,SAAS,EAAE;UACTpB,IAAI,EAAE,EAAE;UACRC,MAAM,EAAE,qBAAqB;UAC7BC,MAAM,EAAE;QACV;MACF,CAAC;MACDmB,WAAW,EAAE;QACXC,SAAS,EAAE,KAAK;QAChBC,IAAI,EAAE,OAAgB,CAAE;MAC1B;IACF,CAAC;IACDC,MAAM,EAAE;MACNP,CAAC,EAAE;QACDQ,WAAW,EAAE,KAAK;QAClBC,IAAI,EAAE;UACJC,KAAK,EAAE;QACT,CAAC;QACDC,KAAK,EAAE;UACHC,QAAQ,EAAE,SAAAA,CAASC,SAA0B,EAAEC,KAAa,EAAEH,KAAU,EAAE;YACxE;YACA,MAAMI,KAAK,GAAG,OAAOF,SAAS,KAAK,QAAQ,GAAGA,SAAS,GAAGG,UAAU,CAACH,SAAS,CAAC;YAC/E,OAAO,IAAIE,KAAK,CAACd,OAAO,CAAC,CAAC,CAAC,EAAE;UAC/B,CAAC;UACDnB,IAAI,EAAE;YACJE,MAAM,EAAE;UACV;QACF;MACJ,CAAC;MACDiC,CAAC,EAAE;QACDR,IAAI,EAAE;UACJtB,OAAO,EAAE;QACX,CAAC;QACDwB,KAAK,EAAE;UACL7B,IAAI,EAAE;YACJE,MAAM,EAAE;UACV;QACF;MACF;IACF;EACF,CAAC;EAGD,oBACE7D,OAAA;IAAKqB,SAAS,EAAC,4DAA4D;IAAAC,QAAA,eACzEtB,OAAA,CAACZ,IAAI;MAACwB,IAAI,EAAEuB,SAAU;MAACgB,OAAO,EAAEA,OAAQ;MAAC9B,SAAS,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEV;AAACvB,EAAA,CApKuBD,oBAAoB;AAAA6F,EAAA,GAApB7F,oBAAoB;AAAA,IAAA6F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}